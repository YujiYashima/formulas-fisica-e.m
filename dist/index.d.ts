declare type velocityUnits = "km/h" | "m/s";
declare const print: (e: any) => void;
declare const onlyNumbers: (value: string) => number;
declare const resultantOfVectors: (vectorA: number, vectorB: number, angleDeg: number) => number;
declare const averageVelocity: (displacement: number, time: number, velocityUnit: velocityUnits) => string;
declare const uniformMotionEquationPosition: (initialPosition: number, velocity: number, time: number) => string;
declare const relativeVelocityMeet: (velocityA: number, velocityB: number, velocityUnit: velocityUnits) => string;
declare const relativeVelocityPersecution: (velocityA: number, velocityB: number, velocityUnit: velocityUnits) => string;
declare const relativeVelocityDistance: (velocityA: number, velocityB: number, velocityUnit: velocityUnits) => string;
declare const averageAcceleration: (velocityChange: number, time: number) => string;
declare const accelerationEquationVelocity: (initialVelocity: number, acceleration: number, time: number) => string;
declare const accelerationEquationPosition: (initialPosition: number, initialVelocity: number, time: number, acceleration: number) => string;
export { print, onlyNumbers };
export { resultantOfVectors };
export { averageVelocity, uniformMotionEquationPosition, relativeVelocityMeet, relativeVelocityPersecution, relativeVelocityDistance, averageAcceleration, accelerationEquationVelocity, accelerationEquationPosition };
